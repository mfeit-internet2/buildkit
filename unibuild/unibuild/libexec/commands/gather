#!/bin/sh
#
# gather - Gather all products into a single directory
#

. "$(dirname $0)/../common"

help()
{
    cat <<EOF
Usage: ${WHOAMI} [ OPTIONS ] DESTINATION

Where DESTINATION is the directory where all products should be
deposited.

OPTIONS:

  --bundle B   Include only bundle B in the output
  --file F     Take input from file F

EOF
}

BUNDLE=

[ -t 0 ] \
    && FILE=unibuild-order \
    || FILE=""

while [ "$1" ]
do
    case "$1" in

	--bundle)
	    BUNDLE="$2"
	    shift
	    shift
	    ;;

	--file)
	    FILE="$2"
	    shift
	    shift
	    ;;

	--help)
	    help
	    exit 0
	    ;;

	--*)
	    die "Unknown option '$1'"
	    ;;

	*)
	    break
	    ;;
    esac
done

if [ $# -ne 1 ]
then
    help
    die
fi

REPO=$1
[ -d "${REPO}" ] || die "${REPO}: Not a directory"

case "${OSINFO_PACKAGING}" in
    rpm)
	DEST="${REPO}/RPMS"
	mkdir -p "${DEST}"
	;;    
    deb)
	DEST="${REPO}"
	mkdir -p "${DEST}"
	;;
    *)
	die "Don't know how to build a repository for ${OSINFO_FAMILY}"
	;;
esac

# Find the absolute path because it's going to be handed to Makefiles
# in other directories.
DEST=$(readlink -e "${DEST}")

BUILD_LIST="${TMPBASE}.list"

cat ${FILE} | build_order "${BUNDLE}" > "${BUILD_LIST}"

# Make sure all products were produced

cat "${BUILD_LIST}" | while read PACKAGE
do
    section GATHERING ${PACKAGE}
    make "PRODUCTS_DEST=${DEST}" -C "${PACKAGE}" install-products
done


section BUILDING REPOSITORY

case "${OSINFO_PACKAGING}" in

    rpm)
	SOURCES="${REPO}/SRPMS"
	mkdir -p "${SOURCES}"
	find "${DEST}" -name '*.src.rpm' -exec mv {} "${SOURCES}" \;
	createrepo "${REPO}"
	;;    

    deb)
	(cd "${REPO}" && dpkg-scanpackages . > Release)
	;;
    
    *)
	die "Unable to build a repository for ${OSINFO_FAMILY}"
	;;
esac


exit 0
